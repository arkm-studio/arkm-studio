@import "@/styles/variables";
@import "@/styles/mixins";

$project-card-theme-map: (
  dark: (
    background:
      linear-gradient(
        to right,
        rgba($primary-color, 0.08),
        rgba($primary-color, 0.05)
      ),
    border: rgba($primary-color, 0),
    text: $text-primary,
    secondary-text: $text-secondary,
    gradient: linear-gradient(45deg, $primary-color, transparent),
  ),
  light: (
    background: rgba($white-color, 0.9),
    border: rgba($primary-light, 0.7),
    text: $black-base,
    secondary-text: $text-secondary,
    gradient: linear-gradient(45deg, $primary-light, transparent),
  ),
  custom: (
    background: var(--project-card-background),
    border: var(--project-card-border),
    text: var(--project-card-text),
    secondary-text: var(--project-card-secondary-text),
    gradient: var(--project-card-gradient),
  ),
);

$status-theme-map: (
  inProgress: (
    bg: #fef3c7,
    text: $black-dark,
  ),
  completed: (
    bg: #d1fae5,
    text: #064e3b,
  ),
  onHold: (
    bg: #eaeaea,
    text: $black-dark,
  ),
);

.project-card {
  $self: &;
  position: relative;
  border-radius: $border-radius-md;
  padding: $spacing-xl;
  isolation: isolate;
  width: 100%;

  @include mobile {
    padding: $spacing-lg;
  }

  @each $theme, $values in $project-card-theme-map {
    &--theme-#{$theme} {
      background: map-get($values, background);

      @if $theme == light {
        // border-left: 2px solid map-get($values, border);
        // border: 1px solid map-get($values, border);
        box-shadow: $shadow-sm;
      } @else {
        border-left: 2px solid map-get($values, border);
      }

      #{$self}__header-title {
        font-weight: 500;
      }

      #{$self}__description {
        font-weight: 400;
      }

      #{$self}__header-title,
      #{$self}__description,
      #{$self}__footer-link {
        color: map-get($values, text);
      }

      @if $theme == dark {
        @include gradient-border;
      }
    }
  }

  &__header {
    @include flex(column, flex-start, stretch);

    &-top {
      @include flex(row, space-between, center);
      margin-bottom: $spacing-xl;

      @include mobile-medium {
        margin-bottom: $spacing-lg;
      }
    }

    &-status {
      display: inline-flex;
      align-items: center;
      border-radius: $border-radius-full;
      padding: 0.25rem 0.625rem;
      // margin-bottom: $spacing-xl;

      @each $status, $colors in $status-theme-map {
        &--#{$status} {
          background-color: map-get($colors, bg);
          color: map-get($colors, text) !important;
        }
      }
    }

    &-title {
      margin-top: 0;
    }
  }

  &__description {
    margin-block: $spacing-md $spacing-xl;
    max-width: 640px;

    @include mobile-medium {
      margin-block: $spacing-md;
    }
  }

  &__footer {
    margin-top: $spacing-lg;
    @include flex(row, space-between, center);

    &-updated {
      margin-bottom: 0.2em;
    }

    &-link {
      @include flex;
      @include transition(color);
      cursor: pointer;
      text-decoration: underline;
      text-underline-offset: 0.2em;
      gap: $spacing-xs;
    }
  }

  &--small {
    padding: $spacing-lg;

    @include mobile {
      padding: $spacing-md;
    }

    #{$self}__header {
      &-top {
        @include flex(row, space-between, center);
      }

      &-title {
        margin-bottom: $spacing-md;
        margin-left: 1px;
      }
    }

    & #{$self}__priority {
      font-size: 12px;
      margin: unset;

      @media only screen and (max-width: 640px) {
        font-size: 11px;
      }
    }

    #{$self}__footer {
      margin-top: $spacing-md;

      &-updated {
        margin-bottom: unset;
      }
    }
  }
}
