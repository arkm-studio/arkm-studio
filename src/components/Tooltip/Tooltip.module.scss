@import "@/styles/variables";
@import "@/styles/mixins";

$tooltip-theme-map: (
  dark: (
    bg: $black-base,
    text: $white-base,
    border: rgba($white-base, 0.25),
  ),
  light: (
    bg: $white-light,
    text: $black-base,
    border: rgba($black-base, 0.15),
  ),
  custom: (
    bg: var(--tooltip-bg),
    text: var(--tooltip-text),
    border: var(--tooltip-border),
  ),
);

.tooltip-container {
  position: relative;
  display: inline-flex;
  width: 100%;
}

.tooltip {
  position: absolute;
  z-index: $z-index-tooltip;
  padding: $spacing-xs $spacing-sm;
  border-radius: $border-radius-sm;
  pointer-events: none;
  opacity: 0;
  visibility: hidden;
  box-shadow: $shadow-md;

  // Theme variations
  @each $theme, $values in $tooltip-theme-map {
    &[data-theme="#{$theme}"] {
      background: map-get($values, bg);
      //   color: map-get($values, text);
      border: 1px solid map-get($values, border);
    }
  }

  &--visible {
    opacity: 1;
    visibility: visible;
  }

  &__content {
    margin: 0;
    white-space: nowrap;
  }

  &::before {
    content: "";
    position: absolute;
    width: 6px;
    height: 6px;
    transform: rotate(45deg);
    border-style: solid;
    border-width: 1px;
    pointer-events: none;
  }

  // Position variations and arrow placement
  &--right::before {
    left: -3px;
    top: 50%;
    transform: translateY(-50%) rotate(45deg);
    border-right: none;
    border-top: none;
  }

  &--left::before {
    right: -3px;
    top: 50%;
    transform: translateY(-50%) rotate(45deg);
    border-left: none;
    border-bottom: none;
  }

  &--top::before {
    bottom: -3px;
    left: 50%;
    transform: translateX(-50%) rotate(45deg);
    border-top: none;
    border-left: none;
  }

  &--bottom::before {
    top: -3px;
    left: 50%;
    transform: translateX(-50%) rotate(45deg);
    border-bottom: none;
    border-right: none;
  }

  // Theme-specific arrow colors
  @each $theme, $values in $tooltip-theme-map {
    &[data-theme="#{$theme}"]::before {
      background: map-get($values, bg);
      border-color: map-get($values, border);
    }
  }
}
