@import "@/styles/variables";
@import "@/styles/mixins";

// Theme configuration map remains unchanged
$header-theme-map: (
  dark: (
    background: $black-base,
    border: rgba($white-base, 0.16),
    glow: $primary-color,
    icon: $text-primary,
  ),
  light: (
    background: $white-color,
    border: rgba($black-base, 0.1),
    glow: rgba($primary-color, 0.5),
    icon: $black-base,
  ),
  custom: (
    background: var(--custom-background, rgba($black-base, 0)),
    border: var(--custom-border, rgba($primary-color, 0.3)),
    glow: var(--custom-glow, rgba($primary-color, 0.5)),
    icon: var(--custom-icon, $text-primary),
  ),
);

@mixin subtle-header-glow($color, $intensity: 0.3) {
  box-shadow: 0 1px 3px rgba($color, $intensity);
}

.page-header-wrapper {
  position: relative;
  width: 100%;
}

.page-header {
  padding: 12px 0;
  left: 80px;
  right: 0;
  background-color: var(
    --header-background,
    map-get(map-get($header-theme-map, dark), background)
  );
  border-bottom: 1px solid
    var(--header-border, map-get(map-get($header-theme-map, dark), border));

  &--original {
    position: fixed;
    top: 72px;
    z-index: calc($z-index-header - 1);
  }

  &--clone {
    visibility: hidden;
    position: relative;
    top: 0;
    left: 0;
    pointer-events: none;
  }

  @include transition(left, background-color, border-color);

  // Theme variations remain unchanged
  @each $theme in (light, dark, custom) {
    &--theme-#{$theme} {
      @each $property, $value in map-get($header-theme-map, $theme) {
        --header-#{$property}: #{$value};
      }

      @include subtle-header-glow(
        var(--header-glow, map-get(map-get($header-theme-map, $theme), glow))
      );
    }
  }

  @include mobile {
    left: 0;
  }

  // Rest of the existing styles remain unchanged
  &__container {
    margin: 0 auto;
    width: 100%;
    max-width: $content-max-width;
    padding: 0 $spacing-lg;
    @include flex(row, space-between, center, $spacing-md);

    @include mobile {
      padding: 0 $spacing-md;
      flex-direction: column;
      align-items: flex-start;
    }
  }

  &__content {
    flex: 1;
    @include flex(row, space-between, center, $spacing-xs);

    @include mobile {
      @include flex(column, flex-start, flex-start, $spacing-sm);
    }
  }

  &__title-container {
    @include flex(row, flex-start, center, $spacing-md);

    @include mobile {
      gap: $spacing-sm;
    }
  }

  &__title-icon {
    @include flex-center;
    color: var(--header-icon, map-get(map-get($header-theme-map, dark), icon));
    @include transition(color);

    @include mobile {
      height: 20px;
      width: 20px;
    }
  }

  &__actions {
    @include flex(row, flex-start, center, $spacing-md);

    @include mobile {
      margin-top: $spacing-sm;
      width: 100%;
      justify-content: flex-end;
    }
  }

  @include reduced-motion {
    transition: none;
  }
}
