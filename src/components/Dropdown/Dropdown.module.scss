@use "sass:map";
@import "@/styles/variables";
@import "@/styles/mixins";

$themes: (
  light: (
    text-primary: $black-base,
    text-secondary: rgba($black-base, 0.7),
    background: $white-light,
    border: rgba($black-base, 0),
    hover: $primary-color,
    shadow: $shadow-md,
    disabled: rgba($black-base, 0.4),
    disabled-bg: rgba($white-dark, 0.5),
  ),
  dark: (
    text-primary: $text-primary,
    text-secondary: $text-secondary,
    background: $black-dark,
    border: rgba($text-primary, 0),
    hover: rgba($primary-color, 0.65),
    shadow: $shadow-md,
    disabled: $text-disabled,
    disabled-bg: rgba($black-base, 0.15),
  ),
  custom: (
    text-primary: var(--dropdown-text, $text-primary),
    text-secondary: var(--dropdown-secondary, $text-secondary),
    background: var(--dropdown-background, $black-light),
    border: var(--dropdown-border, rgba($text-primary, 0)),
    hover: var(--dropdown-primary, $primary-color),
    shadow: $shadow-md,
    disabled: var(--textfield-disabled, $text-disabled),
    disabled-bg: var(--textfield-disabled-bg, rgba($black-base, 0.15)),
  ),
);

$filter-theme-map: (
  dark: (
    button-border-color: rgba($white-base, 0.25),
    button-color: rgba($white-base, 0.8),
    background: $black-base,
    hover: convert-to-rgba($primary-color, 0.75),
  ),
  light: (
    button-border-color: rgba($black-base, 0.1),
    button-color: rgba($black-base, 0.65),
    background: $white-light,
    hover: convert-to-rgba($primary-color, 0.75),
  ),
  custom: (
    button-border-color: var(--dropdown-border),
    button-color: var(--dropdown-text, lighten($indigo-light, 7%)),
    background: var(--dropdown-background, $white-color),
    hover: var(--dropdown-primary, $primary-color),
  ),
);

.dropdownWrapper {
  @include flex(column, flex-start, stretch, $spacing-md);

  @each $theme, $colors in $themes {
    &--theme-#{$theme} {
      .dropdown__label--disabled {
        color: map.get($colors, disabled) !important;
      }
    }
  }
}

.field {
  position: relative;
  width: 100%;
}

.dropdownContainer {
  position: relative;
  width: 100%;
}

.dropdown {
  position: relative;
  width: 100%;

  @each $theme, $colors in $themes {
    &--theme-#{$theme} {
      .dropdown__text {
        background-color: var(
          --dropdown-background,
          convert-to-rgba(map.get($colors, background), 0.325)
        );
        border: 1.3px solid var(--dropdown-border, map.get($colors, border));
        color: var(--dropdown-text, map.get($colors, text-primary));

        &--disabled {
          background-color: map.get($colors, disabled-bg);

          p {
            color: map.get($colors, disabled);
          }
        }
      }

      .dropdown__menu {
        background-color: var(
          --dropdown-background,
          map.get($colors, background)
        );
        @include elevation();
      }

      .dropdown__item {
        color: var(--dropdown-text, map.get($colors, text-primary));
        background-color: var(
          --dropdown-background,
          convert-to-rgba(map.get($colors, background), 0.325)
        );
        border: 1px solid var(--dropdown-border, map.get($colors, border));
        border-top: none;

        @include hover {
          background-color: var(--dropdown-primary, map.get($colors, hover));

          p {
            color: $white-light;
          }
        }

        @include focus-visible {
          background-color: var(--dropdown-primary, map.get($colors, hover));

          p {
            color: $white-light;
          }
        }

        &:last-child {
          border-bottom: none;
          border-radius: 0 0 6px 6px;
        }
      }

      &:not(.dropdown--variant-filter).dropdown--active {
        .dropdown__text {
          border-bottom-left-radius: 0;
          border-bottom-right-radius: 0;
        }
      }

      &.dropdown--variant-filter {
        .dropdown__text {
          // border-radius: 0;
          border: none;
          border-bottom: 1.3px
            solid
            var(
              --dropdown-border,
              map-get($filter-theme-map, #{$theme}, button-border-color)
            );
          background-color: var(
            --dropdown-background,
            map-get($filter-theme-map, #{$theme}, background)
          );
        }

        .dropdown__menu {
          border: 1.3px
            solid
            var(
              --dropdown-border,
              map-get($filter-theme-map, #{$theme}, button-border-color)
            );
          background-color: var(
            --dropdown-background,
            map-get($filter-theme-map, #{$theme}, background)
          );
        }

        .dropdown__item {
          border: unset;

          &:not(:last-child) {
            border-bottom: 1.3px
              solid
              var(
                --dropdown-border,
                map-get($filter-theme-map, #{$theme}, button-border-color)
              );
          }

          @include hover {
            background-color: var(
              --dropdown-primary,
              map-get($filter-theme-map, #{$theme}, hover)
            );
          }
        }

        .dropdown__item-text,
        .dropdown__icon {
          color: var(
            --dropdown-text,
            map-get($filter-theme-map, #{$theme}, button-color)
          );
        }
      }

      .dropdown__menu::-webkit-scrollbar-thumb {
        background-color: var(--dropdown-border, map.get($colors, border));

        &:hover {
          background-color: var(--dropdown-primary, map.get($colors, hover));
        }
      }
    }
  }

  &__text {
    border-radius: $border-radius-md;
    @include flex(row, space-between, center);
    padding: $spacing-sm $spacing-md;
    cursor: pointer;
    min-height: 48px;
  }

  &__selected {
    @include flex(row, flex-start, center, $spacing-sm);
    flex: 1;
    min-width: 0;

    &-text {
      @include text-truncate;
    }
  }

  &__icon {
    @include flex-center;
    @include transition(transform);
    margin-left: $spacing-sm;
    // color: currentColor;
    width: 20px;
    height: 20px;
    flex-shrink: 0;

    @include mobile {
      width: 18px;
      height: 18px;
    }

    &--active {
      transform: rotate(180deg);
    }
  }

  &__menu {
    position: absolute;
    left: 0;
    right: 0;
    top: 100%;
    z-index: $z-index-dropdown;
    visibility: hidden;
    opacity: 0;
    transform: translateY(-$spacing-xs);
    @include transition(all);
    overflow-y: auto;
    border-radius: 0 0 $border-radius-md $border-radius-md;

    &--active {
      visibility: visible;
      opacity: 1;
      transform: translateY(0);
    }

    @include custom-scrollbar(6px, transparent, rgba($text-primary, 0));
  }

  &__item {
    @include flex(row, flex-start, center, $spacing-sm);
    padding: 12px $spacing-md;
    @include transition(all);
    cursor: pointer;

    &:focus {
      outline: none;
    }

    &-content {
      @include flex(row, flex-start, center, $spacing-sm);
      flex: 1;
      min-width: 0;
    }

    &-text {
      @include text-truncate;
      flex: 1;
      min-width: 0;
    }
  }

  &--variant-filter {
    .dropdown__text {
      min-height: 34px !important;
      padding: $spacing-xs 12px;
      border: 1px solid;
      border-radius: 6px;
      @include transition(all);

      &:hover {
        filter: brightness(1.1);
      }

      @include mobile {
        min-height: 32px !important;
      }
    }

    .dropdown__menu {
      margin-top: $spacing-xs;
      border-radius: 6px;
      @include elevation();
    }

    .dropdown__item {
      padding: $spacing-sm;
    }
  }

  &--disabled {
    cursor: not-allowed;

    .dropdown__text {
      cursor: not-allowed;
    }
  }

  @include reduced-motion {
    &__menu,
    &__text,
    &__item,
    &__icon {
      transition: none;
    }
  }
}
