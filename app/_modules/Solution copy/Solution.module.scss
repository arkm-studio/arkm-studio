@import "@/app/_styles/variables.scss";
@import "@/app/_styles/mixins.scss";

.solution {
  --card-width: 500px;
  --animation-width: 32%;
  --background-width: 500px;
  --background-height: 532px;
  --aspect-ratio: 1.2;
  --elements-gap: 200px;

  height: fit-content;
  min-height: 600px;
  max-height: 900px;
  width: 100%;
  max-width: 1200px;
  position: relative;
  margin: 0 auto;
  z-index: 1;
  contain: content; // La opción más agresiva para contener cambios

  // Forzar compositing layer para evitar repaints
  transform: translate3d(0, 0, 0);

  @include tablet {
    --aspect-ratio: 1.1;
    --elements-gap: 50px;
    --animation-width: 35%;
  }

  @include mobile {
    --aspect-ratio: 1;
    --animation-width: 85%;
    --elements-gap: 32px;
    height: auto;
    min-height: 650px;
    max-height: none;
    padding: 0;
  }

  @include mobile-small {
    --elements-gap: 24px;
  }

  // Ocultar elementos durante carga inicial
  &:not(.solution--ready) {
    .solution__decorative-elements,
    .solution__card-wrapper,
    .solution__wireframe-wrapper {
      opacity: 0;
    }
  }

  // Forzar aceleración hardware para animaciones fluidas
  &__card-wrapper,
  &__wireframe-wrapper {
    transform: translate3d(0, 0, 0);
    backface-visibility: hidden;
    perspective: 1000px;
    contain: layout style paint; // Contener todo para mejor rendimiento

    // Transiciones controladas por GSAP, no usar transition aquí
    // ya que puede causar conflicto con las animaciones GSAP
    will-change: transform, opacity;
  }

  // Optimizaciones específicas para móvil
  &--mobile {
    .solution__card-wrapper,
    .solution__wireframe-wrapper {
      contain: content; // Contenido más agresivo
      will-change: auto; // Desactivar will-change
    }

    .solution__container,
    .solution__content-wrapper {
      transform: none !important;
      perspective: none !important;
      transform-style: flat !important;
    }
  }

  &__container {
    position: relative;
    width: 100%;
    height: 100%;
    padding: 0 $spacing-md;
    perspective: 1000px; // Valor óptimo para rendimiento
    transform-style: preserve-3d;
    // No usar will-change aquí para evitar crear demasiadas capas de compositing

    @include mobile {
      padding: 0;
      perspective: none;
      transform-style: flat;
    }
  }

  &__content-wrapper {
    display: flex;
    align-items: center;
    justify-content: center;
    height: 100%;
    width: 100%;
    gap: var(--elements-gap);
    position: relative;
    transform-style: preserve-3d;

    @include mobile {
      flex-direction: column;
      align-items: flex-start;
      gap: var(--elements-gap);
      padding: $spacing-md 0;
      transform-style: flat;
    }
  }

  &__card-wrapper {
    position: relative;
    width: var(--card-width);
    z-index: 5;
    height: auto;
    flex: 0 0 calc(55% - (var(--elements-gap) / 2));
    max-width: calc(55% - (var(--elements-gap) / 2));
    display: flex;
    align-items: center;
    justify-content: center;

    @include mobile {
      width: 100%;
      max-width: 100%;
      flex: 0 0 auto;
      margin: 0 auto;
      height: fit-content;
      align-items: flex-start;
      justify-content: flex-start;
      z-index: 6;
      transform: none !important;
      transform-style: flat;
      backface-visibility: visible;
    }
  }

  &__wireframe-wrapper {
    position: relative;
    flex: 0 0 var(--animation-width);
    max-width: var(--animation-width);
    height: 85%;
    z-index: 4;
    border-radius: $border-radius-md;
    display: flex;
    align-items: center;
    justify-content: center;

    @include mobile {
      width: 90%;
      flex: 0 0 auto;
      margin: 0 auto;
      align-items: flex-start;
      height: fit-content;
      max-width: 90%;
      z-index: 5;
      transform: none !important;
      transform-style: flat;
      backface-visibility: visible;
    }
  }

  // Layout variations
  &--card-left {
    .solution__content-wrapper {
      flex-direction: row;

      @include mobile {
        flex-direction: column;
      }
    }
  }

  &--card-right {
    .solution__content-wrapper {
      flex-direction: row-reverse;

      @include mobile {
        flex-direction: column;
      }
    }
  }

  &__card {
    h2,
    h3,
    p {
      max-width: 100%;
    }

    p {
      font-size: 1.1rem;
      line-height: 1.6;

      @include mobile {
        font-size: 1rem;
        line-height: 1.5;
      }
    }

    h2,
    h3 {
      font-size: 1.8rem;
      margin-bottom: 1.5rem;

      @include mobile {
        font-size: 1.5rem;
        margin-bottom: 1rem;
      }
    }
  }

  // Contenedor para elementos decorativos con rendimiento optimizado
  &__decorative-elements {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 1;
    opacity: 0;
    // No usar transition aquí, GSAP se encargará de la animación
    will-change: transform, opacity;
    transform: translate3d(0, 0, 0); // Forzar layer de compositing
    contain: paint style; // Contener cambios visuales

    @include mobile {
      display: none; // Ocultar en móvil
    }
  }

  /* Elementos para efectos decorativos optimizados */
  &__floating-element {
    position: absolute;
    pointer-events: none;
    z-index: 1;
    // Reducir el costo de renderizado con filtros simples
    // y radial-gradients optimizados
    &--1 {
      width: 150px;
      height: 150px;
      border-radius: 20px;
      background: radial-gradient(
        circle,
        rgba($primary-color, 0.08) 0%,
        rgba($primary-color, 0.03) 70%,
        transparent 100%
      );
      filter: blur(20px);
      top: 20%;
      right: 5%;
      transform: rotate(25deg);
    }

    &--2 {
      width: 120px;
      height: 120px;
      border-radius: 50%;
      background: radial-gradient(
        circle,
        rgba($primary-color, 0.06) 0%,
        rgba($primary-color, 0.02) 70%,
        transparent 100%
      );
      filter: blur(15px);
      bottom: 15%;
      left: 10%;
    }

    &--3 {
      width: 80px;
      height: 80px;
      border-radius: 10px;
      background: radial-gradient(
        circle,
        rgba($white-color, 0.05) 0%,
        rgba($white-color, 0.02) 70%,
        transparent 100%
      );
      filter: blur(10px);
      top: 30%;
      left: 5%;
      transform: rotate(-15deg);
    }

    &--4 {
      width: 100px;
      height: 100px;
      background: radial-gradient(
        circle,
        rgba($white-color, 0.04) 0%,
        rgba($white-color, 0.01) 70%,
        transparent 100%
      );
      filter: blur(12px);
      bottom: 25%;
      right: 15%;
    }
  }

  /* Líneas conectoras optimizadas con gradientes simples */
  &__connector {
    position: absolute;
    height: 1px;
    // Simplificar gradientes para mejor rendimiento
    background: linear-gradient(
      90deg,
      transparent 0%,
      rgba($primary-color, 0.1) 50%,
      transparent 100%
    );
    z-index: 3;
    opacity: 0.7;
    transform-origin: left center;

    &--horizontal {
      width: 30%;
      top: 50%;
      left: 10%;
    }

    &--diagonal-1 {
      width: 25%;
      top: 40%;
      left: 15%;
      transform: rotate(25deg);
    }

    &--diagonal-2 {
      width: 20%;
      bottom: 35%;
      right: 15%;
      transform: rotate(-15deg);
    }
  }

  /* Luz ambiental extremadamente simplificada */
  &__ambient-light {
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    background: radial-gradient(
      ellipse at center,
      rgba($primary-color, 0.02) 0%,
      transparent 70%
    );
    z-index: 2;
    pointer-events: none;
    opacity: 0;

    &--active {
      opacity: 1;
    }
  }

  // Respetar las preferencias del usuario para movimiento reducido
  @media (prefers-reduced-motion: reduce) {
    * {
      transition: none !important;
      animation: none !important;
      transform: none !important;
    }
  }
}

// Las transiciones de hover pueden afectar el rendimiento en scroll
// así que las hacemos muy simples
@media (hover: hover) and (pointer: fine) {
  .solution:hover {
    .solution__card-wrapper {
      filter: brightness(1.05);
    }

    .solution__wireframe-wrapper {
      filter: brightness(1.08);
    }
  }
}
