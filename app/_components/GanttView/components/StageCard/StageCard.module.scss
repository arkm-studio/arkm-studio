@import "@/app/_styles/variables";
@import "@/app/_styles/mixins";

$stage-card-theme-map: (
  dark: (
    background:
      linear-gradient(
        to right,
        rgba($primary-color, 0.08),
        rgba($primary-color, 0.05)
      ),
    border: rgba($primary-color, 0.03),
    text: $text-primary,
    secondary-text: $text-secondary,
    divider: rgba($text-primary, 0.08),
    gradient: linear-gradient(45deg, $primary-color, transparent),
  ),
  light: (
    background: rgba($white-color, 0.9),
    border: rgba($primary-light, 0.7),
    text: $black-base,
    secondary-text: $text-secondary,
    divider: rgba($text-primary, 0.7),
    gradient: linear-gradient(45deg, $primary-light, transparent),
  ),
  custom: (
    background: var(--stage-card-background),
    border: var(--stage-card-border),
    text: var(--stage-card-text),
    secondary-text: var(--stage-card-secondary-text),
    divider: var(--stage-card-divider),
    gradient: var(--stage-card-gradient),
  ),
);

.stage-card {
  $self: &;
  padding: $spacing-md;
  position: relative;
  background: linear-gradient(
    to right,
    rgba($primary-color, 0.05),
    rgba($primary-color, 0.07)
  );
  border-radius: $border-radius-md;
  width: 100%;
  max-width: 600px;
  margin: 0 auto;
  @include transition(all 0.3s cubic-bezier(0.4, 0, 0.2, 1));

  @include mobile {
    padding: $spacing-sm;
    max-width: 100%;
  }

  @each $theme, $values in $stage-card-theme-map {
    &--theme-#{$theme} {
      background: map-get($values, background);

      #{$self}__details {
        border-top: 1px solid;
        border-color: transparent;
        position: relative;
        height: 0;
        opacity: 0;
        padding-top: 0;
        margin-top: 0;
        pointer-events: none;
        transition: height 0.2s ease-out, border-color 0.2s ease-out,
          padding-top 0.2s ease-out, margin-top 0.2s ease-out;
      }

      &.stage-card--active {
        #{$self}__details {
          border-color: map-get($values, divider);
          height: auto;
          opacity: 1;
          padding-top: $spacing-md;
          margin-top: $spacing-md;
          pointer-events: auto;

          @include mobile {
            padding-top: $spacing-sm;
            margin-top: $spacing-sm;
          }
        }
      }

      @if $theme == light {
        box-shadow: $shadow-sm;
      } @else {
        border: 1px solid map-get($values, border);

        &::before {
          content: "";
          position: absolute;
          left: -2px;
          top: 0;
          height: 100%;
          width: 2px;
          background: linear-gradient(
            to bottom,
            transparent,
            $primary-color-80,
            transparent
          );
          opacity: 0;
          transition: opacity 0.3s ease;
        }

        &:hover,
        &.stage-card--active {
          border-top-left-radius: 0;

          &::before {
            opacity: 1;
          }
        }
      }
    }
  }

  &__header {
    @include flex(row, space-between, center);
    margin-bottom: 12px;

    @include mobile {
      flex-direction: column;
      align-items: flex-start;
      gap: $spacing-xs;
    }
  }

  &__progress {
    @include flex(row, space-between, center, $spacing-lg);

    @include mobile {
      width: 100%;
      gap: $spacing-md;
    }
  }

  &__details {
    will-change: height, border-color, padding-top, margin-top;
    @include flex($direction: column, $align: flex-start, $gap: $spacing-xs);
  }

  &__date-range {
    display: flex;
    align-items: center;
    gap: $spacing-xs;

    @include mobile-small {
      flex-direction: column;
      align-items: flex-start;

      span:nth-child(2) {
        display: none;
      }
    }
  }

  &__assignees {
    @include flex($align: center);
    margin-top: $spacing-sm;
    flex-wrap: wrap;
    gap: $spacing-sm;

    @include mobile {
      flex-direction: column;
      align-items: flex-start;
    }
  }

  &__assignee-avatars {
    display: flex;
    margin-right: $spacing-sm;

    @include mobile {
      margin-right: 0;
      width: 100%;
      overflow-x: auto;
      padding-bottom: $spacing-xs;
    }
  }

  &__assignee-avatar {
    width: 24px;
    height: 24px;
    border-radius: $border-radius-full;
    border: 2px solid $black-light;
    margin-left: -8px;

    @include mobile-small {
      width: 20px;
      height: 20px;
    }

    &:first-child {
      margin-left: 0;
    }
  }

  &__dependencies {
    width: 100%;
    margin-top: $spacing-md;
    padding-top: $spacing-md;
    @include flex(column, flex-start, stretch, $spacing-xs);

    @include mobile {
      margin-top: $spacing-sm;
      padding-top: $spacing-sm;
    }

    @each $theme, $values in $stage-card-theme-map {
      #{$self}--theme-#{$theme} & {
        border-top: 1px solid map-get($values, divider);
      }
    }
  }

  &__dependency-item {
    @include flex(row, flex-start, center, $spacing-xs);
    flex-wrap: wrap;

    @include mobile-small {
      gap: $spacing-xs;
    }
  }

  &__milestones {
    margin-top: $spacing-sm;
    @include flex(column, flex-start, stretch, $spacing-xs);
    width: 100%;
  }

  &__milestone-header {
    @include flex(row, flex-start, center, $spacing-xs);
  }

  &__milestone-item {
    @include flex(row, flex-start, center, $spacing-sm);
    padding-left: $spacing-lg;

    @include mobile {
      padding-left: $spacing-md;
    }

    @include mobile-small {
      flex-wrap: wrap;
      gap: $spacing-xs;
    }
  }

  &__details {
    &.is-visible {
      .stage-card__dependencies,
      .stage-card__milestones {
        animation: slideDown 0.3s ease forwards;
      }
    }
  }
}

@keyframes slideDown {
  from {
    opacity: 0;
    transform: translateY(-10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

// Add smooth transitions for width changes
@media screen and (max-width: $mobile-breakpoint) {
  .stage-card {
    transition: width 0.3s ease-in-out;
  }
}
