@import "@/app/_styles/variables";
@import "@/app/_styles/mixins";

$theme-map: (
  dark: (
    success: (
      background: rgba($success-color, 0.1),
      text: $success-light,
      border: rgba($success-color, 0.2),
    ),
    error: (
      background: rgba($error-color, 0.1),
      text: $error-light,
      border: rgba($error-color, 0.2),
    ),
    warning: (
      background: rgba($warning-color, 0.1),
      text: $warning-light,
      border: rgba($warning-color, 0.2),
    ),
    info: (
      background: rgba($info-color, 0.1),
      text: $info-light,
      border: rgba($info-color, 0.2),
    ),
    inProgress: (
      background: rgba($primary-color, 0.1),
      text: $primary-light,
      border: rgba($primary-color, 0.2),
    ),
    onHold: (
      background: rgba($white-base, 0.1),
      text: $text-secondary,
      border: rgba($white-base, 0.2),
    ),
    completed: (
      background: rgba($success-color, 0.1),
      text: $success-light,
      border: rgba($success-color, 0.2),
    ),
    cancelled: (
      background: rgba($error-color, 0.1),
      text: $error-light,
      border: rgba($error-color, 0.2),
    ),
    delayed: (
      background: rgba($error-color, 0.1),
      text: $error-light,
      border: rgba($error-color, 0.2),
    ),
    atRisk: (
      background: rgba(#fbbf24, 0.1),
      text: #fde68a,
      border: rgba(#fbbf24, 0.2),
    ),
    notStarted: (
      background: rgba($black-base, 0.2),
      text: $text-secondary,
      border: rgba($black-base, 0.3),
    ),
    default: (
      background: rgba($black-base, 0.1),
      text: $text-primary,
      border: rgba($black-base, 0.2),
    ),
  ),
  light: (
    success: (
      background: rgba($success-color, 0.1),
      text: $success-dark,
      border: rgba($success-color, 0.2),
    ),
    error: (
      background: rgba($error-color, 0.1),
      text: $error-dark,
      border: rgba($error-color, 0.2),
    ),
    warning: (
      background: rgba($warning-color, 0.1),
      text: $warning-dark,
      border: rgba($warning-color, 0.2),
    ),
    info: (
      background: rgba($info-color, 0.1),
      text: $info-dark,
      border: rgba($info-color, 0.2),
    ),
    inProgress: (
      background: rgba($primary-color, 0.1),
      text: $primary-color,
      border: rgba($primary-color, 0.2),
    ),
    onHold: (
      background: rgba($black-base, 0.05),
      text: rgba($black-base, 0.6),
      border: rgba($black-base, 0.1),
    ),
    completed: (
      background: rgba($success-color, 0.1),
      text: $success-dark,
      border: rgba($success-color, 0.2),
    ),
    cancelled: (
      background: rgba($error-color, 0.1),
      text: $error-dark,
      border: rgba($error-color, 0.2),
    ),
    delayed: (
      background: rgba($error-color, 0.1),
      text: $error-dark,
      border: rgba($error-color, 0.2),
    ),
    atRisk: (
      background: rgba(#fbbf24, 0.1),
      text: #b45309,
      border: rgba(#fbbf24, 0.2),
    ),
    notStarted: (
      background: rgba($black-base, 0.05),
      text: rgba($black-base, 0.7),
      border: rgba($black-base, 0.1),
    ),
    default: (
      background: rgba($black-base, 0.05),
      text: $text-primary,
      border: rgba($black-base, 0.1),
    ),
  ),
);

.badge {
  @include flex(row, center, center);
  border-radius: $border-radius-full;
  width: fit-content;
  border: 1px solid transparent;
  @include transition(background-color, border-color);
  gap: $spacing-xs;

  @each $theme, $variants in $theme-map {
    &--theme-#{$theme} {
      @each $status, $colors in $variants {
        &.badge--status.badge--#{$status} {
          background-color: map-get($colors, background);
          color: map-get($colors, text);
          border-color: map-get($colors, border);

          .badge__text {
            color: map-get($colors, text) !important;
          }

          .badge__icon {
            color: map-get($colors, text);
          }
        }
      }
    }
  }

  &--theme-custom {
    background-color: var(--badge-background);
    color: var(--badge-text);
    border-color: var(--badge-border);

    .badge__icon {
      color: var(--badge-icon, var(--badge-text));
    }
  }

  &--tag {
    background-color: rgba($black-base, 0.05);
    color: $text-primary;
    border-color: rgba($black-base, 0.1);
  }

  &--counter {
    background-color: rgba($primary-color, 0.1);
    color: $primary-color;
    border-color: rgba($primary-color, 0.2);
  }
  &--small {
    padding: $spacing-xs $spacing-sm;
    min-height: 24px;

    @include mobile {
      padding: ($spacing-xs * 0.75) ($spacing-sm * 0.75);
      min-height: 20px;
    }

    .badge__text {
      line-height: 1.3;
    }
  }

  &--medium {
    padding: $spacing-xs $spacing-md;
    min-height: 28px;

    @include mobile {
      padding: ($spacing-xs * 0.75) ($spacing-md * 0.75);
      min-height: 24px;
    }

    .badge__text {
      font-weight: 400 !important;
      line-height: 1.3 !important;
    }
  }

  &--large {
    padding: $spacing-sm $spacing-lg;
    min-height: 32px;

    @include mobile {
      padding: ($spacing-sm * 0.75) ($spacing-lg * 0.75);
      min-height: 28px;
    }
  }
  &--clickable {
    cursor: pointer;
    &:hover {
      opacity: 0.8;
    }
  }

  &--disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }

  &__text {
    font-weight: 500;
  }

  &__icon {
    @include flex(row, center, center);
    line-height: 0;

    svg {
      height: 16px;
      width: 16px;
    }
  }

  &__remove {
    @include flex(row, center, center);
    line-height: 0;
    cursor: pointer;
    opacity: 0.8;
    padding: $spacing-xs;

    &:hover {
      opacity: 1;
    }

    &:disabled {
      cursor: not-allowed;
    }
  }
}
