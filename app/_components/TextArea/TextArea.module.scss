@use "sass:map";
@import "@/app/_styles/variables";
@import "@/app/_styles/mixins";

$themes: (
  light: (
    text-primary: $black-base,
    text-secondary: rgba($black-base, 0.7),
    background: $white-light,
    border: rgba($black-base, 0),
    label: $text-secondary,
    error: $error-color,
    placeholder: rgba($black-base, 0.5),
    focus: rgba($black-light, 0.7),
    autofill-bg: rgba($black-base, 0.3),
    disabled: rgba($black-base, 0.4),
    disabled-bg: rgba($white-dark, 0.5),
  ),
  dark: (
    text-primary: $text-primary,
    text-secondary: $text-secondary,
    background: $black-light,
    border: rgba($text-primary, 0.1),
    label: $text-secondary,
    error: $error-color,
    placeholder: $text-tertiary,
    focus: rgba($text-primary, 0.2),
    autofill-bg: $black-dark,
    disabled: $text-disabled,
    disabled-bg: rgba($black-base, 0.15),
  ),
  custom: (
    text-primary: var(--textarea-text, $text-primary),
    text-secondary: var(--textarea-secondary, $text-secondary),
    background: var(--textarea-background, $black-light),
    border: var(--textarea-border, rgba($text-primary, 0)),
    label: var(--textarea-label, $text-secondary),
    error: var(--textarea-error, $error-color),
    placeholder: var(--textarea-placeholder, $text-tertiary),
    focus: var(--textarea-focus, $primary-color),
    autofill-bg: var(--textarea-autofill-bg, rgba($black-base, 0.3)),
    disabled: var(--textarea-disabled, $text-disabled),
    disabled-bg: var(--textarea-disabled-bg, rgba($black-base, 0.15)),
  ),
);

.textarea {
  @include flex(column, flex-start, stretch, $spacing-sm);
  width: 100%;

  &__input-container {
    position: relative;
    width: 100%;
    @include flex(column, flex-start, stretch, $spacing-md);
  }

  &__input-wrapper {
    position: relative;
    width: 100%;
  }

  &__input {
    width: 100%;
    border-radius: $border-radius-md;
    padding: $spacing-sm $spacing-md;
    @include transition(all);
    min-height: 120px;
    font-size: 14.5px;
    font-family: "sofia-pro", sans-serif !important;
    font-weight: 400 !important;
    resize: vertical;

    @include mobile {
      min-height: 100px;
      font-size: 13px;
    }

    &:focus {
      outline: none;
    }
  }

  &__icon {
    position: absolute;
    right: $spacing-md;
    top: $spacing-md; // Adjusted for textarea
    @include flex-center;
    @include transition(all);
    width: 18px;
    height: 18px;

    &--error {
      color: $error-color;
    }
  }

  &__error {
    @include flex(row, flex-start, center, $spacing-xs);
    margin-top: $spacing-xs;
  }

  &__required {
    // color: $error-color;
    // color: $error-color;
  }

  // Variants
  &--primary {
    .textarea__label {
      position: static;
      transform: none;
      pointer-events: none;
    }
  }

  &--secondary {
    .textarea__input-container {
      gap: 0;
    }

    .textarea__label {
      position: absolute;
      left: $spacing-md;
      top: $spacing-md; // Adjusted for textarea (top instead of 50%)
      transform: none; // Adjusted for textarea (no transform needed)
      pointer-events: none;
      z-index: 1;
      padding: 0 $spacing-xs;
      @include transition(all);

      &--focused {
        font-size: 0.75rem;
        top: 0;
        transform: translateY(-50%);
        background-color: inherit;

        &::before {
          content: "";
          position: absolute;
          height: 8px;
          width: calc(100% + 6px);
          top: 50%;
          left: -3px;
          background-color: inherit;
          z-index: -1;
        }
      }
    }
  }

  // Theme variations
  @each $theme, $colors in $themes {
    &--theme-#{$theme} {
      color: map.get($colors, text-secondary);

      .textarea__label {
        &--focused {
          color: map.get($colors, text-secondary);
          font-weight: 600 !important;
        }
      }

      .textarea__input {
        background-color: convert-to-rgba(map.get($colors, background), 0.325);
        border: 1.3px solid map.get($colors, border);
        color: map.get($colors, text-primary);

        &::placeholder {
          color: map.get($colors, placeholder);
        }

        &:focus {
          border: 1.82px solid map.get($colors, focus);
        }
      }

      .textarea__icon {
        color: map.get($colors, text-primary);

        &--error {
          color: map.get($colors, error);
        }
      }

      .textarea__error {
        color: map.get($colors, error);
      }

      &.textarea--disabled {
        cursor: not-allowed;

        .textarea__label {
          color: map.get($colors, disabled);
        }

        .textarea__input {
          background-color: map.get($colors, disabled-bg);
          color: map.get($colors, disabled);
          border-color: transparent;
          cursor: not-allowed;

          &::placeholder {
            color: map.get($colors, disabled);
          }
        }

        .textarea__icon {
          color: map.get($colors, disabled) !important;
        }
      }

      &.textarea--error {
        .textarea__input {
          border-color: map.get($colors, error);
          background-color: convert-to-rgba(map.get($colors, error), 0.05);
        }

        .textarea__label {
          color: map.get($colors, error);
          background-color: map.get($colors, background);
        }

        .textarea__icon {
          color: map.get($colors, error);
        }
      }
    }
  }

  @include reduced-motion {
    &,
    &__input,
    &__label,
    &__icon {
      transition: none;
    }
  }
}
