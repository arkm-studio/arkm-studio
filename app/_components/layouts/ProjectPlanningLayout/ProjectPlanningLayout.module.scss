// components/ProjectPlanning/ProjectPlanning.module.scss
@import "@/app/_styles/variables";
@import "@/app/_styles/mixins";

$planning-theme-map: (
  dark: (
    // background:
    //   linear-gradient(
    //     to right,
    //     rgba($primary-color, 0),
    //     rgba($primary-color, 0)
    //   ),
    background: rgba($primary-color, 0.02),
    border: rgba($white-base, 0.16),
    text: $text-primary,
    secondary-text: $text-secondary,
    gradient: linear-gradient(45deg, $primary-color, transparent),
  ),
  light: (
    background: rgba($white-color, 0.9),
    border: rgba($black-base, 0.065),
    text: $black-base,
    secondary-text: $text-secondary,
    gradient: linear-gradient(45deg, $primary-light, transparent),
  ),
  custom: (
    background: var(--planning-background),
    border: var(--planning-border),
    text: var(--planning-text),
    secondary-text: var(--planning-secondary-text),
    gradient: var(--planning-gradient),
  ),
);

.planning {
  $self: &;

  &__header {
    @include flex(row, space-between, center);
    padding: $spacing-md $spacing-xl;
    border-bottom: 1px solid;

    @include tablet {
      padding-inline: $spacing-lg;
    }

    @include mobile-small {
      padding-inline: 17px;
    }
  }

  &__title {
    @include flex(column, flex-start, flex-start, $spacing-xs);
  }

  &__actions {
    @include flex(row, flex-end, center, $spacing-sm);
  }

  &__button {
    @include flex(row, center, center, $spacing-xs);
    padding: $spacing-sm $spacing-md;
    border-radius: $border-radius-md;
    @include transition(background-color, transform);

    &-icon {
      height: 16px;
      width: 16px;
    }

    &--primary {
      background: $primary-color;
      color: $white-color;

      &:hover {
        background: $primary-color-90;
        transform: translateY(-1px);
      }

      &:active {
        transform: translateY(0);
      }
    }

    &--secondary {
      background: rgba($text-primary, 0.1);
      color: $text-primary;

      &:hover {
        background: rgba($text-primary, 0.15);
      }

      &:active {
        background: rgba($text-primary, 0);
      }
    }
  }

  @include tablet {
    padding: $spacing-md 0 0;

    &__header {
      flex-direction: column;
      align-items: flex-start;
      gap: $spacing-md;
      padding-block: 0;
    }

    &__actions {
      width: 100%;
      justify-content: flex-start;
    }
  }

  @include mobile {
    &__actions {
      flex-wrap: wrap;
      gap: $spacing-xs;
    }

    &__button {
      flex: 1;
      min-width: 120px;
      justify-content: center;
    }
  }

  // Theme

  @each $theme, $values in $planning-theme-map {
    &--theme-#{$theme} {
      background: map-get($values, background);
      color: map-get($values, text);

      @if $theme == light {
        box-shadow: $shadow-sm;
      } @else {
        position: relative;
        &::before {
          content: "";
          position: absolute;
          inset: 0;
          border-radius: inherit;
          border: 1px solid transparent;
          background: linear-gradient(45deg, $primary-color, transparent)
            border-box;
          -webkit-mask: linear-gradient(#fff 0 0) padding-box,
            linear-gradient(#fff 0 0);
          -webkit-mask-composite: destination-out;
          mask-composite: exclude;
          pointer-events: none;
          z-index: -1;
        }
      }

      #{$self}__header {
        border-color: map-get($values, border);
      }
    }
  }
}
