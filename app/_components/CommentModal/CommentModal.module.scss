@import "../../_styles/variables";
@import "../../styles/mixins";

$modal-theme-map: (
  dark: (
    background: $black-base,
    border: rgba($primary-color, 0.1),
    text: $text-primary,
    secondary-text: $text-secondary,
    backdrop: rgba($black-base, 0.8),
    input-bg: $black-base,
    input-border: rgba($primary-color, 0.2),
    button-hover: rgba($primary-color, 0.1),
  ),
  light: (
    background: $white-color,
    border: $black-base,
    text: $text-primary,
    secondary-text: $text-secondary,
    backdrop: rgba($black-base, 0.5),
    input-bg: $white-color,
    input-border: $text-primary,
    button-hover: rgba($primary-light, 0.1),
  ),
  custom: (
    background: var(--modal-background),
    border: var(--modal-border),
    text: var(--modal-text),
    secondary-text: var(--modal-secondary-text),
    backdrop: var(--modal-backdrop),
    input-bg: var(--modal-input-bg),
    input-border: var(--modal-input-border),
    button-hover: var(--modal-button-hover),
  ),
);

.modal {
  $self: &;
  position: fixed;
  inset: 0;
  z-index: 50;
  overflow-y: auto;

  @each $theme, $values in $modal-theme-map {
    &--theme-#{$theme} {
      #{$self}__backdrop {
        background: map-get($values, backdrop);
      }

      #{$self}__container {
        background: map-get($values, background);
        border: 1px solid map-get($values, border);
      }

      #{$self}__title {
        color: map-get($values, text);
      }

      #{$self}__close {
        color: map-get($values, secondary-text);

        &:hover {
          color: map-get($values, text);
        }
      }

      #{$self}__textarea {
        color: map-get($values, text);
        background: map-get($values, input-bg);
        border-color: map-get($values, input-border);

        &::placeholder {
          color: map-get($values, secondary-text);
        }

        &:focus {
          border-color: $primary-color;
          box-shadow: 0 0 0 2px rgba($primary-color, 0.2);
        }
      }

      #{$self}__button {
        &--secondary {
          color: map-get($values, text);
          background: map-get($values, background);
          border-color: map-get($values, border);

          &:hover {
            background: map-get($values, button-hover);
          }
        }
      }
    }
  }

  &__overlay {
    @include flex-center;
    min-height: 100vh;
    padding: $spacing-md;
  }

  &__backdrop {
    position: fixed;
    inset: 0;
    transition: background-color 0.2s ease;
  }

  &__container {
    position: relative;
    border-radius: $border-radius-lg;
    box-shadow: $shadow-sm;
    width: 100%;
    max-width: 28rem;
    transition: all 0.2s ease;
  }

  &__header {
    @include flex-between;
    padding: $spacing-md;
    border-bottom: 1px solid;
    border-color: inherit;
  }

  &__title {
    font-size: 18px;
    font-weight: 600;
    transition: color 0.2s ease;
  }

  &__close {
    @include flex-center;
    padding: $spacing-xs;
    border-radius: $border-radius-sm;
    transition: color 0.2s ease;
  }

  &__content {
    padding: $spacing-md;
  }

  &__textarea {
    width: 100%;
    height: 8rem;
    padding: $spacing-sm;
    border-width: 1px;
    border-style: solid;
    border-radius: $border-radius-md;
    resize: vertical;
    transition: all 0.2s ease;
  }

  &__actions {
    @include flex(row, flex-end, center, $spacing-sm);
    margin-top: $spacing-md;
  }

  &__button {
    padding: $spacing-sm $spacing-md;
    font-size: 14px;
    font-weight: 500;
    border-radius: $border-radius-md;
    transition: all 0.2s ease;

    &--secondary {
      border-width: 1px;
      border-style: solid;
    }

    &--primary {
      color: $white-color;
      background: $primary-color;
      border: 1px solid transparent;

      &:hover:not(:disabled) {
        background: $primary-dark;
      }

      &:disabled {
        opacity: 0.5;
        cursor: not-allowed;
      }
    }
  }
}
